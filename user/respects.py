from database.database_manager import Database

from aiogram import F,Router,types
from aiogram.types import Message
from aiogram.filters import CommandStart,Command
from bot_instance import db


respects_router = Router()

async def upgrade_role(user_id):
    current_role = await db.get_user_role(user_id)
    respect_amount = await db.get_user_respects(user_id)
    if respect_amount:
        print(f"üîç –î–ï–ë–ê–ì: user_id={user_id}, current_role={current_role}, respect={respect_amount}")
        
        if current_role == "CustomRole":
            return "–ö–∞—Å—Ç–æ–º–Ω–∞—è —Ä–æ–ª—å –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è"
        
        original_role = current_role
        new_role = current_role
        
        # –õ–û–ì–ò–ö–ê –ü–û–í–´–®–ï–ù–ò–Ø –î–õ–Ø –í–°–ï–• –†–û–õ–ï–ô
        if respect_amount >= 100.0 and current_role != "LEGENDARY":
            new_role = "LEGENDARY"
        
        elif respect_amount >= 50.0 and current_role not in ["–°–≤–æ—è–∫", "LEGENDARY"]:
            new_role = "–°–≤–æ—è–∫"
        
        elif respect_amount >= 10.0 and current_role not in ["–ë—Ä–æ–¥—è–≥–∞", "–°–≤–æ—è–∫", "LEGENDARY"]:
            new_role = "–ë—Ä–æ–¥—è–≥–∞"
        
        print(f"üîç –†–ï–ó–£–õ–¨–¢–ê–¢: new_role={new_role}")
        
        if new_role != original_role:
            await db.set_user_role(user_id, new_role)
            return f"üéâ –†–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {new_role}"
        
        return "–†–æ–ª—å –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å"
    

async def give_respect_user(user_id_him_given,user_id,respect_amount) -> bool:
    if await db.is_admin(user_id) is not False: 
        if await db.user_exists(user_id_him_given):
            await db.add_user_respect(user_id_him_given,float(respect_amount))      
            #await upgrade_role(user_id_him_given)    
            return f"[AdminSystem] ‚úÖ–í—ã –≤—ã–¥–∞–ª–∏ {respect_amount} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id_him_given}"
        else:
            return f"[AdminSystem] ‚ùå–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å —Ä–µ—Å–ø–µ–∫—Ç—ã"
    else: 
        return f"[AdminSystem] ‚ùå–í—ã –Ω–µ –∞–¥–º–∏–Ω!"

async def give_respect(user_id_him_given,respect_amount) -> bool:
    if await db.user_exists(user_id_him_given):
        await db.add_user_respect(user_id_him_given,float(respect_amount))          
        return True
    else:
        return False

async def role_given_respect(user_id, him_res):
    role = await db.get_user_role(user_id)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–æ–Ω—É—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
    bonuses = {
        "–£—á–∞—Å—Ç–Ω–∏–∫": 0.2,
        "–ë—Ä–æ–¥—è–≥–∞": 0.3, 
        "–°–≤–æ—è–∫": 0.4,
        "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä": 0.4,
        "LEGENDARY": 0.5
    }
    
    bonus = bonuses.get(role, 0.2)  # –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    
    # –í—ã–¥–∞—ë–º —Ä–µ—Å–ø–µ–∫—Ç –û–î–ò–ù –†–ê–ó
    success = await give_respect(him_res, bonus)
    
    if not success:
        return "‚ùå –û—à–∏–±–∫–∞ –≤—ã–¥–∞—á–∏ —Ä–µ—Å–ø–µ–∫—Ç–∞"
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å
    respectHim = await db.get_user_respects(him_res)
    
    # –ê–ø–≥—Ä–µ–π–¥–∏–º —Ä–æ–ª—å
    await upgrade_role(him_res)
    
    return f"‚úÖ –í—ã –≤—ã—Ä–∞–∑–∏–ª–∏ —É–≤–∞–∂–µ–Ω–∏–µ! +{bonus} —Ä–µ—Å–ø–µ–∫—Ç–∞\nüéØ –ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç: {round(respectHim, 2)}"