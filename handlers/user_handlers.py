from aiogram import F,Router
from aiogram.types import Message
from aiogram.filters import CommandStart,Command

from aiogram.types import ChatMemberUpdated


from database.database_manager import Database
from user.respects import give_respect_user,role_given_respect,upgrade_role
from .stat_manager import StatManger
from .profile_manager import ProfileManager
from admin.registraition import register_user
from bot_instance import db

user_router = Router()
stat_manager = StatManger(db)
profile_manager = ProfileManager(db)

@user_router.message(Command("help"))
async def cmd_help(message: Message):
    base_commands = """
help - –ø–æ–º–æ—â—å
/profile - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∫—É 
 –û—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —á—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã –æ—Ç–≤–µ—Ç–∏–ª–∏
/rep - —Ä–µ—Å–ø–µ–∫—Ç
/stat - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
/farm - —Ñ–∞—Ä–º –∫–æ–∏–Ω–æ–≤
    

    """
    
    if await db.is_admin(message.from_user.id):
        base_commands += f"""üëÆ –ê–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã:
/apanel - –æ—Ç–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
/mute - –º—É—Ç
/warn - –≤–∞—Ä–Ω
/add_rep - –≤—ã–¥–∞—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é
/reg - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–æ—Ç–µ(–æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ )
/give_admin - –∫–∞–∫ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ  /give_admin –£—Ä–æ–≤–µ–Ω—å \n –∫–∞–∫ –æ–±—ã—á–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ /give_admin –¢–ì–∞–π–¥–∏ –£—Ä–æ–≤–µ–Ω—å """
    
    await message.answer(base_commands)


# –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–≥–¥–∞ –º–µ–Ω—è–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ —á–∞—Ç–µ
@user_router.chat_member(F.chat.type != "private")
async def user_joined_chat(event: ChatMemberUpdated):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–Ω–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è
    if event.old_chat_member.status == "left" and event.new_chat_member.status == "member":
        user_id = event.new_chat_member.user.id
        username = event.new_chat_member.user.username or event.new_chat_member.user.first_name
        firstname = event.new_chat_member.user.first_name
        checkReg = await db.user_exists(user_id)
        if checkReg:
        # –¢–≤–æ—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await event.answer(
                f"üëã{username} –≤–µ—Ä–Ω—É–ª—Å—è –≤ –±–µ—Å–µ–¥—É!\n"
               
            )
            
        else:
            register = await register_user(user_id,username,firstname)
            if register:
                await event.answer(
                    f"üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {username}!\n"
                    f"–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥"
                )
                await event.answer(register)
                await cmd_help(event)
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –ë–î –∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å –¥—Ä—É–≥–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
        

@user_router.message(CommandStart())
async def reg_command(message: Message):
    user_id = message.from_user.id
    username = message.from_user.username or "No username"
    firstname = message.from_user.first_name or "No first name"
    register = await register_user(user_id,username,firstname)
    if register:
        await message.answer(register)



@user_router.message(Command("profile"))
async def profile_command(message: Message):
    user_id = message.reply_to_message.from_user.id if message.reply_to_message else message.from_user.id
    profile_text = await profile_manager.get_full_profile(user_id)
    await message.answer(profile_text, parse_mode='HTML')

@user_router.message(Command("stat"))
async def stat_command(message: Message):
    stats_data = await stat_manager.get_system_stats()
    top_respect = await stat_manager.get_top_respect(3)
    
    formatted_message = await stat_manager.format_stats_message(stats_data, top_respect)
    await message.answer(formatted_message, parse_mode='HTML')
    
@user_router.message(Command('add_rep'))
async def add_rep(message : Message):
    if not message.reply_to_message:
        return "–ß—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å —Ä–µ—Å–ø–µ–∫—Ç, –≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! \n "
    else:
        respect_amount = "".join(message.text.split()[1:])
        user_id_him_given = message.reply_to_message.from_user.id
        user_id = message.from_user.id
        result = await give_respect_user(user_id_him_given,user_id,respect_amount)
        if result is not None:
            await message.answer(result)
            role = await upgrade_role(user_id_him_given)
            await message.answer(role)
        else:
            await message.answer(result)


@user_router.message(Command('rep'))
async def give_user_respect(message : Message):
    if not message.reply_to_message:
        await message.answer("–ß—Ç–æ–±—ã –≤—ã—Ä–∞–∑–∏—Ç—å —É–≤–∞–∂–µ–Ω–∏–µ –≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,–∫ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—è–≤–∏—Ç—å —É–≤–∞–∂–µ–Ω–∏–µ!") 
    else:
        himrep = message.reply_to_message.from_user.id
        user_id = message.from_user.id
        if himrep != user_id:
            text = await role_given_respect(user_id,himrep)
            upgrade_respect = await upgrade_role(himrep)
            if text:
                #await message.answer(upgrade_respect)
                await message.answer(text)
                if upgrade_respect:
                    await message.answer(upgrade_respect)
        else:
            await message.answer("–ù–µ–ª—å–∑—è —Ä–µ—Å–ø–µ–∫—Ç–æ–≤–∞—Ç—å —Å–∞–º–æ–º—É —Å–µ–±–µ!")

            
